description: >
  A simple, straightforward usage of Cloudrail to scan a Terraform plan.

executor: default

parameters:
  cloudrail_api_key:
    description: |
      The Cloudrail API key to use.
    type: string
  plan_output_file:
    description: |
      The plan file that was created with "terraform plan -out=filename".
    type: string
  tf_directory:
    description: |
      The directory where the Terraform code is located, must have a ".terraform" directory directly inside it (that is - a "terraform init" was run there).
    type: string
  cloud-account-id:
    description: |
      The ID of the cloud account you would like to run Cloudrail against. This is generally the same acccount the Terraform plan was created for.
    type: string
  execution-source-identifier:
    description: |
      An identifier that will be passed to the Cloudrail service to help identify this execution in the web user interface.
    type: string
    default: $CIRCLE_PROJECT_REPONAME - $CIRCLE_BRANCH - $CIRCLE_BUILD_NUM
  junit-output:
    type: boolean
    default: false

steps:
  - when:
      condition: << parameters.junit-output >>
      steps:
        - run: mkdir -p "/tmp/junit/cloudrail"
  - scan_terraform:
      cloudrail_api_key: << parameters.cloudrail_api_key >>
      plan_output_file: << parameters.plan_output_file >>
      tf_directory: << parameters.tf_directory >>
      cloud-account-id: << parameters.cloud-account-id >>
      execution-source-identifier: << parameters.execution-source-identifier >>
      junit-output:  << parameters.junit-output >>
      junit-output-file: /tmp/junit/cloudrail/results.xml
  - when:
      condition: << parameters.junit-output >>
      steps:
        - store_test_results:
            path: /tmp/junit
