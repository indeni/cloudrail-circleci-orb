description: >
  A simple, straightforward usage of Cloudrail to scan a Terraform plan.

executor: default

parameters:
  cloudrail_api_key_envvar_name:
    description: |
      The name of the environment variable containing the Cloudrail API key to use.
    type: string
  plan_output_file:
    description: |
      The plan file that was created with "terraform plan -out=filename".
    type: string
  tf_directory:
    description: |
      The directory where the Terraform code is located, must have a ".terraform" directory directly inside it (that is - a "terraform init" was run there).
    type: string
  cloud-account-id:
    description: |
      The ID of the cloud account you would like to run Cloudrail against. This is generally the same acccount the Terraform plan was created for.
    type: string
  execution-source-identifier:
    description: |
      An identifier that will be passed to the Cloudrail service to help identify this execution in the web user interface.
    type: string
    default: $CIRCLE_PROJECT_REPONAME - $CIRCLE_BRANCH - $CIRCLE_BUILD_NUM
  junit-output:
    description: |
      When set to true, the Cloudrail job will save a JUnit-formatted result output. Any rules set to MANDATE that fail will
      generate failed tests which are then viewable in the CircleCI Test tab.
    type: boolean
    default: false
  working_directory:
    description: |
      Where the Terraform init was done within the code.
    type: string
    default: ~/project
  workspace:
    description: |
      Where to attach a workspace - this is used to pass a Terraform plan (and any required files) from a previous job into this one.
    type: string
    default: .


working_directory: <<parameters.working_directory>>

steps:
  - when:
      condition: << parameters.junit-output >>
      steps:
        - run: mkdir -p "/tmp/junit/cloudrail"
  - attach_workspace:
      at: <<parameters.workspace>>
  - run:
      name: Analyze Terraform plan with Cloudrail
      command: |
        cloudrail run --directory "<<parameters.tf_directory>>" --tf-plan "<<parameters.plan_output_file>>" \
          --origin ci --build-link "$CIRCLE_BUILD_URL"  --execution-source-identifier "<<parameters.execution-source-identifier>>"  \
          --api-key ${<<parameters.cloudrail_api_key_envvar_name>>} --cloud-account-id "<<parameters.cloud-account-id>>" \
          <<# parameters.junit-output >> --output-format junit --output-file /tmp/junit/cloudrail/results.xml <</ parameters.junit-output >> \
          --auto-approve --no-fail-on-service-error
  - when:
      condition: << parameters.junit-output >>
      steps:
        - store_test_results:
            path: /tmp/junit
